apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: artifactory
    meta.helm.sh/release-namespace: artifactory
  creationTimestamp: "2025-05-16T09:32:22Z"
  generation: 1
  labels:
    app: artifactory
    app.kubernetes.io/managed-by: Helm
    chart: artifactory-107.111.7
    component: artifactory
    heritage: Helm
    release: artifactory
    version: 7.111.7
  name: artifactory
  namespace: artifactory
  resourceVersion: "89974"
  uid: c95bd28a-0b9b-4b5b-bc38-1553be0b1850
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: artifactory
      release: artifactory
      role: artifactory
  serviceName: artifactory
  template:
    metadata:
      annotations:
        checksum/artifactory-unified-secret: 39f0b411e38cb9b6470321adbac53342b649d3d51383286e4f457e0b04378fc7
      creationTimestamp: null
      labels:
        app: artifactory
        chart: artifactory-107.111.7
        component: artifactory
        heritage: Helm
        release: artifactory
        role: artifactory
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: artifactory
                  release: artifactory
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/router/app/bin/entrypoint-router.sh
        env:
        - name: JF_ROUTER_TOPOLOGY_LOCAL_REQUIREDSERVICETYPES
          value: jfrt,jfac,jfob,jfmd,jfevt,jffe,jfcon,jfcfg,jfevd,jftpl,jfomr
        image: releases-docker.jfrog.io/jfrog/router:7.165.3
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - while [[ $(curl --fail --silent --connect-timeout 2 http://localhost:8081/artifactory/api/v1/system/liveness)
                =~ OK ]]; do echo Artifactory is still alive; sleep 2; done
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -s -k --fail --max-time 5 http://localhost:8082/router/api/v1/system/liveness
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: router
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -s -k --fail --max-time 5 http://localhost:8082/router/api/v1/system/readiness
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl -s -k --fail --max-time 5 http://localhost:8082/router/api/v1/system/readiness
          failureThreshold: 30
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/router
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/artifactory/app/third-party/node/bin/node /opt/jfrog/artifactory/app/frontend/bin/server/dist/bundle.js /opt/jfrog/artifactory/app/frontend
        env:
        - name: JF_SHARED_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.111.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 5 http://localhost:8070/api/v1/system/liveness
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: frontend
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 5 http://localhost:8070/api/v1/system/readiness
          failureThreshold: 90
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/artifactory/app/evidence/bin/jf-evidence start
        env:
        - name: JF_SHARED_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: JF_SHARED_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: artifactory-postgresql
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.111.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 5 http://localhost:8051/api/v1/system/liveness
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: evidence
        ports:
        - containerPort: 8051
          name: http-evidence
          protocol: TCP
        - containerPort: 8052
          name: grpc-evidence
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 5 http://localhost:8051/api/v1/system/readiness
          failureThreshold: 90
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/artifactory/app/metadata/bin/jf-metadata start
        env:
        - name: JF_SHARED_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: JF_SHARED_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: artifactory-postgresql
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.111.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 5 http://localhost:8086/api/v1/system/liveness
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: metadata
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 5 http://localhost:8086/api/v1/system/readiness
          failureThreshold: 90
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/artifactory/app/onemodel/bin/entrypoint-onemodel.sh
        env:
        - name: JF_SHARED_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: JF_ONEMODEL_LISTENADDR
          value: 0.0.0.0
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.111.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /api/v1/system/liveness
            port: 8071
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: onemodel
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: api/v1/system/readiness
            port: 8071
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 12
          httpGet:
            path: api/v1/system/readiness
            port: 8071
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/artifactory/app/event/bin/jf-event start
        env:
        - name: JF_SHARED_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.111.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 5 http://localhost:8061/api/v1/system/liveness
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: event
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 5 http://localhost:8061/api/v1/system/readiness
          failureThreshold: 90
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/artifactory/app/jfconnect/bin/jf-connect start
        env:
        - name: JF_SHARED_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.111.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 5 http://localhost:8030/api/v1/system/liveness
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: jfconnect
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 5 http://localhost:8030/api/v1/system/readiness
          failureThreshold: 90
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          set -e; exec /opt/jfrog/artifactory/app/access/bin/entrypoint-access.sh
        env:
        - name: JF_SHARED_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: artifactory-postgresql
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.111.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 5 http://localhost:8040/access/api/v1/system/liveness
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: access
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 5 http://localhost:8040/access/api/v1/system/readiness
          failureThreshold: 30
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/artifactory/app/topology/bin/entrypoint-topology.sh
        env:
        - name: JF_SHARED_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: JF_SHARED_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: artifactory-postgresql
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.111.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /topology/api/v1/system/liveness
            port: 8020
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: topology
        ports:
        - containerPort: 8020
          name: http-topology
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /topology/api/v1/system/readiness
            port: 8020
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 90
          httpGet:
            path: /topology/api/v1/system/readiness
            port: 8020
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/artifactory/app/jfconfig/bin/entrypoint-jfconfig.sh
        env:
        - name: JF_SHARED_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: JF_SHARED_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: artifactory-postgresql
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.111.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /jfconfig/api/v1/system/liveness
            port: 8010
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: jfconfig
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /jfconfig/api/v1/system/readiness
            port: 8010
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 90
          httpGet:
            path: /jfconfig/api/v1/system/readiness
            port: 8010
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          exec /opt/jfrog/artifactory/app/observability/bin/jf-observability start
        env:
        - name: JF_SHARED_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.111.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 5 http://localhost:8036/api/v1/system/liveness
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: observability
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl --fail --max-time 5 http://localhost:8036/api/v1/system/readiness
          failureThreshold: 90
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          set -e; if [ -d /artifactory_extra_conf ] && [ -d /artifactory_bootstrap ]; then
            echo "Copying bootstrap config from /artifactory_extra_conf to /artifactory_bootstrap";
            cp -Lrfv /artifactory_extra_conf/ /artifactory_bootstrap/;
          fi; exec /entrypoint-artifactory.sh
        env:
        - name: JF_RTFS_EMBEDDED_ENABLED
          value: "false"
        - name: JF_ROUTER_ENABLED
          value: "true"
        - name: JF_ROUTER_SERVICE_ENABLED
          value: "false"
        - name: JF_EVENT_ENABLED
          value: "false"
        - name: JF_METADATA_ENABLED
          value: "false"
        - name: JF_FRONTEND_ENABLED
          value: "false"
        - name: JF_FEDERATION_ENABLED
          value: "false"
        - name: JF_OBSERVABILITY_ENABLED
          value: "false"
        - name: JF_JFCONNECT_SERVICE_ENABLED
          value: "false"
        - name: JF_JFCONFIG_ENABLED
          value: "false"
        - name: JF_EVIDENCE_ENABLED
          value: "false"
        - name: JF_ONEMODEL_ENABLED
          value: "false"
        - name: JF_ACCESS_ENABLED
          value: "false"
        - name: JF_TOPOLOGY_SPLIT_CONTAINER_ENABLED
          value: "true"
        - name: JF_SHARED_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: artifactory-postgresql
        image: releases-docker.jfrog.io/jfrog/artifactory-pro:7.111.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -s -k --fail --max-time 5 http://localhost:8091/artifactory/api/v1/system/liveness
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: artifactory
        ports:
        - containerPort: 8082
          name: http
          protocol: TCP
        - containerPort: 8081
          name: http-internal
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl -s -k --fail --max-time 5 http://localhost:8091/artifactory/api/v1/system/readiness
          failureThreshold: 90
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
        - mountPath: /tmp/etc/artifactory/binarystore.xml
          name: artifactory-unified-secret-volume
          subPath: binarystore.xml
        - mountPath: /artifactory_bootstrap/info/installer-info.json
          name: installer-info
          subPath: installer-info.json
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - bash
        - -c
        - rm -fv /var/opt/jfrog/artifactory/etc/db.properties
        image: releases-docker.jfrog.io/ubi9/ubi-minimal:9.5.1742914212
        imagePullPolicy: IfNotPresent
        name: delete-db-properties
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
      - command:
        - /bin/bash
        - -c
        - |
          if [[ -e "/var/opt/jfrog/artifactory/etc/filebeat.yaml" ]]; then chmod 644 /var/opt/jfrog/artifactory/etc/filebeat.yaml; fi; echo "Copy system.yaml to /var/opt/jfrog/artifactory/etc"; mkdir -p /var/opt/jfrog/artifactory/etc; mkdir -p /var/opt/jfrog/artifactory/etc/access/keys/trusted; cp -fv /tmp/etc/system.yaml /var/opt/jfrog/artifactory/etc/system.yaml; echo "Copy binarystore.xml file"; mkdir -p /var/opt/jfrog/artifactory/etc/artifactory; cp -fv /tmp/etc/artifactory/binarystore.xml /var/opt/jfrog/artifactory/etc/artifactory/binarystore.xml; echo "Copy access.config.patch.yml to /var/opt/jfrog/artifactory/etc/access"; mkdir -p /var/opt/jfrog/artifactory/etc/access; cp -fv /tmp/etc/access.config.patch.yml /var/opt/jfrog/artifactory/etc/access/access.config.patch.yml; echo "Copy joinKey to /var/opt/jfrog/artifactory/bootstrap/access/etc/security"; mkdir -p /var/opt/jfrog/artifactory/bootstrap/access/etc/security; echo -n ${ARTIFACTORY_JOIN_KEY} > /var/opt/jfrog/artifactory/bootstrap/access/etc/security/join.key; echo "Copy masterKey to /var/opt/jfrog/artifactory/etc/security"; mkdir -p /var/opt/jfrog/artifactory/etc/security; echo -n ${ARTIFACTORY_MASTER_KEY} > /var/opt/jfrog/artifactory/etc/security/master.key;
        env:
        - name: ARTIFACTORY_JOIN_KEY
          valueFrom:
            secretKeyRef:
              key: join-key
              name: artifactory-unified-secret
        - name: ARTIFACTORY_MASTER_KEY
          valueFrom:
            secretKeyRef:
              key: master-key
              name: artifactory-unified-secret
        image: releases-docker.jfrog.io/ubi9/ubi-minimal:9.5.1742914212
        imagePullPolicy: IfNotPresent
        name: copy-system-configurations
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/artifactory
          name: artifactory-volume
        - mountPath: /tmp/etc/system.yaml
          name: artifactory-unified-secret-volume
          subPath: system.yaml
        - mountPath: /tmp/etc/artifactory/binarystore.xml
          name: artifactory-unified-secret-volume
          subPath: binarystore.xml
        - mountPath: /tmp/etc/access.config.patch.yml
          name: artifactory-unified-secret-volume
          subPath: access.config.patch.yml
      - command:
        - /bin/bash
        - -c
        - |
          echo "Waiting for postgresql to come up"
          ready=false;
          while ! $ready; do echo waiting;
            timeout 2s bash -c "</dev/tcp/artifactory-postgresql/5432"; exit_status=$?;
            if [[ $exit_status -eq 0 ]]; then ready=true; echo "database ok"; fi; sleep 1;
          done
        image: releases-docker.jfrog.io/ubi9/ubi-minimal:9.5.1742914212
        imagePullPolicy: IfNotPresent
        name: wait-for-db
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1030
        runAsGroup: 1030
        runAsNonRoot: true
        runAsUser: 1030
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 40
      volumes:
      - configMap:
          defaultMode: 420
          name: artifactory-installer-info
        name: installer-info
      - configMap:
          defaultMode: 420
          name: artifactory-configmaps
        name: artifactory-configmaps
      - name: artifactory-unified-secret-volume
        secret:
          defaultMode: 420
          secretName: artifactory-unified-secret
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: artifactory-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  availableReplicas: 1
  collisionCount: 0
  currentReplicas: 1
  currentRevision: artifactory-546656759b
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updateRevision: artifactory-546656759b
  updatedReplicas: 1
