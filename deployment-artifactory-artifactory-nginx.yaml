apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: artifactory
    meta.helm.sh/release-namespace: artifactory
  creationTimestamp: "2025-05-16T09:32:22Z"
  generation: 1
  labels:
    app: artifactory
    app.kubernetes.io/managed-by: Helm
    chart: artifactory-107.111.7
    component: nginx
    heritage: Helm
    release: artifactory
  name: artifactory-artifactory-nginx
  namespace: artifactory
  resourceVersion: "89985"
  uid: f3f9c0ca-13ca-4f74-8157-ed2dce4721c6
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: artifactory
      component: nginx
      release: artifactory
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/nginx-artifactory-conf: 87eea38c4bc0dafd1519044d4bb227b9c8759af4bff3210e38dfbc817fd0e8cc
        checksum/nginx-conf: 6c6cce81965051e981fed11e7f78644ff09d74bfe3895070fe3f18e88538bd83
      creationTimestamp: null
      labels:
        app: artifactory
        chart: artifactory-107.111.7
        component: nginx
        heritage: Helm
        release: artifactory
    spec:
      containers:
      - image: releases-docker.jfrog.io/jfrog/nginx-artifactory-pro:7.111.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -s -k --fail --max-time 5 http://localhost:8080/
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: nginx
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -s -k --fail --max-time 5 http://localhost:8080/router/api/v1/system/readiness
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - curl -s -k --fail --max-time 5 http://localhost:8080/router/api/v1/system/readiness
          failureThreshold: 90
          initialDelaySeconds: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-conf
          subPath: nginx.conf
        - mountPath: /var/opt/jfrog/nginx/conf.d/
          name: nginx-artifactory-conf
        - mountPath: /var/opt/jfrog/nginx
          name: nginx-volume
        - mountPath: /var/opt/jfrog/nginx/ssl
          name: ssl-certificates
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /bin/sh
        - -c
        - |
          rm -rfv /var/opt/jfrog/nginx/lost+found; mkdir -p /var/opt/jfrog/nginx/logs;
        image: releases-docker.jfrog.io/ubi9/ubi-minimal:9.5.1742914212
        imagePullPolicy: IfNotPresent
        name: setup
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/jfrog/nginx
          name: nginx-volume
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 107
        runAsGroup: 107
        runAsUser: 104
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: artifactory-nginx-conf
        name: nginx-conf
      - configMap:
          defaultMode: 420
          name: artifactory-nginx-artifactory-conf
        name: nginx-artifactory-conf
      - emptyDir: {}
        name: nginx-volume
      - name: ssl-certificates
        secret:
          defaultMode: 420
          secretName: artifactory-nginx-certificate
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-05-16T09:42:29Z"
    lastUpdateTime: "2025-05-16T09:42:29Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-05-16T09:42:29Z"
    lastUpdateTime: "2025-05-16T09:42:29Z"
    message: ReplicaSet "artifactory-artifactory-nginx-85b8b89bf9" has successfully
      progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
